----------------------------------------------------------------------
Typic usage manual
This file is part of Typic version 6.


----------------------------------------------------------------------
I. Overview

Typic is a program that collects data from multiple sources and
produces a ranking of the peptides of a protein to support the
selection of proteotypic peptides.  Proteotypic peptides uniquely
identify a protein and are consistently identified when a sample with
a protein mixture is analyzed in an LC/MS experiment.

This implementation of Typic is written in Perl as a command line
application (typic.pl).  A Tk graphical interface (typic-tk.pl), and a
cgi with a web interface (typic.cgi coupled to the daemon
typic-daemon) were also implemented in Perl.  These interfaces both
dispatch typic.pl.

For each UniProt protein id given as input to Typic, the output will
be an XLSX file with data on its peptides.  For a protein, Typic may
include peptides from three sources:

- peptides identified in an LC/MS sample, together with quantitative
  information. 

- peptides enlisted in an SRM Atlas build.

- peptides resulting from digestion by Trypsin, cutting the protein
  sequence at every K or R not followed by P.



----------------------------------------------------------------------
II. Installation and execution

To execute Typic it is necessary to:

1) Install Perl 5, if you do not have it already.

2) Install the following Perl packages, that may or may not be
installed along with Perl (the first group is often not installed
while the last group of packages is typically installed by default.)

File::Touch
Chart::Clicker::Renderer::Point
Chart::Clicker
Excel::Writer::XLSX
LWP::Simple
LWP::UserAgent
Statistics::Regression
XML::LibXML
File::HomeDir
Tk

IO::Handle
File::Basename
File::Copy
Getopt::Long
Scalar::Util
Time::HiRes

3) Copy the files in folder "programs" in the repository into a folder
in your computer.

4) Add the folder where you copied Typic files to the PATH environment
variable.


After installation of those packages, from a terminal and after
changing to the same folder where the files were copied, issuing
the command

typic.pl

will execute Typic.  The output of the program with no arguments will
be a textual briefing on its usage.


Issuing the command

typic-tk.pl

will open the graphical interface to Typic.  It is also possible to
start the graphical interface straight from a file explorer by using
the graphical interface of your operating system.

After installation, it should be straightforward to run Typic on the
example data in the repository (see below).

The folder doc/utils contains an Evidence Ontology file and also an
SRM Atlas build in csv format.


-A note for Windows users

For Windows a good choice is Strawberry Perl (strawberryperl.com)
that installs easily or may used in portable mode.

After installing, it is possible to start the program "CPAN Client" to
install the necessary packages.

CPAN Client will display a prompt with the form

CPAN> 

at which the command install may be used to install the packages,
for instance

cpan> install File:Touch



----------------------------------------------------------------------
III. Input

The data given to Typic as input may include DDA LC/MS data in
agnostic or in MaxQuant format (see details below).  Moreover, other
files in FASTA format, in TSV format, in OBO format or in SRM Atlas
format.

A file in TSV format is a "tab-separated values file" where numeric values
have a period as the decimal point.

Additional Data on each protein will be downloaded from UniProt and from
ProteinAtlas on demand.



-Agnostic input

Agnostic input of LC/MS data is a TSV file.  

The agnostic file (TSV format) must contain four columns with headers:

Protein accession
Peptide sequence
Quantitative information
Retention time

The file may contain other columns as well.  These other columns may
appear inbetween the columns listed above, but their relative order
must be the same as shown above.

Each entry in column 'Protein accession' is expected to have one or
more UniProt accession numbers separated by a comma.

If a peptide occurs more than once for the same protein, the value of
'Quantitative information' for the peptide will be the average of the
respective occurrences and the value of 'Retention time' will be the
median of the respective occurrences.



-MaxQuant input

LC/MS data processed by MaxQuant may be given to Typic in up to three
files: the peptides file, the evidence file and a groups file.  The
peptides file is mandatory, evidence is optional, and both are
supposed to be given in the TSV format generated by MaxQuant.  The
groups file is optional.

The groups file (TSV format) must contain two columns with headers:

Sample 
Group

indicating the group to which each sample that appears in the peptides
file belongs.  Sample names are expected to match those in the
peptides file.

When data from MaxQuant is provided, intensity plots are produced for
each peptide.  If a groups file is provided then samples are colored
by group in the intensity plots.  This is the only effect of adding a
groups file.



-iRTs

A file containing retention times for iRTs may be given as input to
Typic.    

The iRTs file (TSV format) must contain two columns with headers:

Peptide sequence
Retention time

indicating the retention time of each iRT peptide.



----------------------------------------------------------------------
IV. Output

For each peptide, Typic will produce an XLSX spreadsheet with some
sheets.

The peptides sheet has one row for each peptide with the following data:

- peptide length
- peptide position in protein
- the source of peptide identification
- intensity in LC/MS experiment (MaxQuant input) or quantitative information
  (agnostic input)
- intensity quartile (MaxQuant input) or quantitative information quartile
  (agnostic input)
- for MaxQuant LC/MS samples, the number of samples with valid
  intensity value, the MS/MS count (if an evidences file is provided),
  uniqueness in groups and uniqueness in proteins
- the number of occurrences in proteome sequences and the ID of at
  most five such occurrences (if a proteome file is provided)
- the number of occurrences in gene sequences and the ID of at most
  five such occurrences (if a proteome file is provided)
- modifications reported in UniProt of types disulfide bond, modified
  residue, signal peptide, glycosylation site, ubiquitin and
  ubiquitin-like, and whether they are experimental or non-experimental.
- the number of times the peptide occurs in contaminant sequences (if
  a contaminants file is provided)
- the number of methionines in the peptide and their positions
- the number of missing cleavages in the peptide and their positions
- the retention time (for agnostic input or for MaxQuant input with an evidence file)
- an in-silico hydrophobicity index
- a theoretical retention time with respect to sample retention times
  if there are at least 5 samples with retention times.
  A regression model is constructed for peptides that have an
  experimental retention time and their hydrophobicity indexes.  Then
  the theoretical retention time is estimated for each peptide with
  the regression model
- a theoretical retention time with respect to iRT retention times.
  A regression model is constructed for peptides in the iRT dataset
  and their hydrophobicity indexes.  Then the theoretical retention
  time is estimated for each peptide with the regression model
- previous, first, last and next amino acids
- instruments reported in PeptideAtlas experiments that also
  identified the peptide (for peptides in sample and SRM Atlas)

Peptides whose length is not in the interval [7,25] are discarded by
default.  

In the ranking sheet, peptides are ranked according to the following
criteria:

- peptides identified in LC/MS samples are best favored, those
  identified in SRM Atlas are favored and those identified only by
  no-miss digestion are ill-favored.
- peptides with MS intensity in the 3rd or 4th quartile are preferred.
- for MaxQuant LC/MS samples, peptides with valid intensity values are
  preferred, peptides unique in sample groups are preferred and peptides
  unique in proteins are preferred.

- for LC/MS data in agnostic format or when there are no LC-MS data,
  peptides unique in the reference proteome are preferred.
  
- peptides with modifications features reported in UniProt having
  types disulfide bond, modified residue, signal peptide,
  glycosylation site, ubiquitin and ubiquitin-like are ill-favored.
  
- peptides having methionines are ill-favored.
- peptides having missing cleavages are ill-favored.
- peptides with an acidic amino acid at an end or flanked by an acidic
  amino acid are ill-favored.


The intensity-plots sheet will be included if MaxQuant data are
provided as input.  This sheet will have an intensity plot for each
peptide across samples.  If a groups file is also provided as input
then samples will be colored by group in the intensity plots.


The RT-plot will be included whenever quantitative data or iRTs data
are provided.  If there are quantitative data, a plot for theoretical
retention times with respect to the retention times of samples will be
included. If there are iRTs data, a plot for theoretical retention
times with respect to the retention times of iRTs will be included.
Only the top 10 peptides in the ranking will be included in RT plots.

The last three sheets are attributes-glossary, ranking-glossary and
metadata.



----------------------------------------------------------------------
V. Example executions

-Example with DDA data in MaxQuant format

The zip file "input.zip" in the folder "example-maxquant" in the
repository may be used to test Typic with MaxQuant data.

Download the files to a folder in your computer.  Open the graphical
interface of Typic and fill the fields with appropriate files in the
MaxQuant tab.  In the Output tab, click on the Run button and wait for
the program to finish displaying data in the execution window that
will open.

It is also possible to run the example on a terminal.  Open a terminal
and change to the folder where the example files are.

Executing the command

typic.pl -v eco.obo -i ids.txt -p peptides.txt -e evidence.txt -g groups.txt -f HS-UniProt-201705.fasta -s HS-SRMAtlas-201604.csv -r irts-pierce.csv -d -a

will execute Typic on the example data.

The output will be in the same folder with the input data, unless a
different folder has been selected.

The output for these data is also in the folder "results" in the
repository.


-Example with DDA data in agnostic format

The zip file "input.zip" in the folder "example-agnostic" in the
repository may be used to test Typic with fictional agnostic data.

Download the files to a folder in your computer.  Open the graphical
interface of Typic and fill the fields with appropriate files in the
Agnostic tab.  In the Output tab, click on the Run button and wait for
the program to finish displaying data in the execution window that
will open.

It is also possible to run the example on a terminal.  Open a terminal
and change to the folder where the example files are.

Executing the command

typic.pl -v eco.obo -i ids.txt -t agn-data.csv -f HS-UniProt-201705.fasta -s HS-SRMAtlas-201604.csv -r irts-pierce.csv -d -a

will execute Typic on the example data.

The output will be in the same folder with the input data, unless a
different folder has been selected.

The output for these data is also in the folder "results" in the
repository.


----------------------------------------------------------------------
VI. Arguments

The arguments for typic.pl are described below.  For a cleaner
interface and because some input options are fixed, typic.cgi accept a
subset of these arguments.

The minimal input to typic.pl is a list of UniProt accession
identifiers of proteins and an Evidence Ontology file.  


Mandatory arguments:

-i
A text file with UniProt protein accession numbers or protein names
separated by any number of blanks (spaces, tabs, newlines).

If the hash symbol (#) appears anywhere in a line, the contents of
that line is ignored from the hash up to the end of the line.

-v
An Evidence Ontology file in OBO format. 
https://evidenceontology.org



Options for LC/MS data in MaxQuant format:

-p
A MaxQuant peptides file in TSV format.

-e
A MaxQuant evidence file in TSV format. Must be used with -p. 

-g
A TSV file with experimental groups.



Option for LC/MS data in agnostic format:

-t
An agnostic input file in TSV format. 


Options for other sources of peptides:

-d
Digest each protein in silico (trypsin, no misses) and include the
resulting peptides.  If no LC/MS data nor an SRM Atlas build are
provided, digest is implied.

-s
Include the peptides of a protein enlisted in SRM Atlas file in TSV format. 
http://www.srmatlas.org



Options for other sources of data:

-f
A proteome file in fasta format. 

-c
A contaminants file in fasta format. 

-r
Experimental retention times for iRT peptides in a TSV file.  

-a
Download and include data from PeptideAtlas.
http://www.peptideatlas.org



Output options:

-o
A directory where the spreadsheets produced by Typic will be
written. If not provided, write to the current working directory.

-w
A directory where UniProt and PeptideAtlas files will be read from, if
present, or saved to after downloading. If not provided, Typic will
write data to the current working directory and delete the downloaded
data after processing.

-u
Do not update data previously downloaded from UniProt and PeptideAtlas
and currently stored in the directory set by -w.

-n
Do not generate quantitative plots nor RT plots.

-l
The interval of lengths of peptides included in the output.
The default is [7,25]: -l 7,25
A right-open interval may be specified, for instance -l 7, 

-k
A triplet of RGB hexadecimal values for ranking colors separated by
a comma.  The default is green, yellow, red: -k 20E020,EEF71B,E02020.
      
-q
Refrain from printing progress messages.



Other options:

-h
Usage reminder.



----------------------------------------------------------------------
VII. Notes

Typic-tk behaves differently in Linux and in Windows.  In Linux, the
execution of Typic may be interrupted.  In Windows it may not, and the
user will be "in the dark" until the program has finished.

PeptideAtlas does not seem to have a programatic access, and
downloading from a url requires knowing the build version.  The
build version has been hard-coded into a variable in typic.pl.

----------------------------------------------------------------------
This is the end of typic-manual.txt
